{"version":3,"sources":["app.ts","environment.ts","home.ts","main.ts","case-management/case-list.ts","resources/index.ts","C:/web/so-arelia-navigation-test/src/app.html","C:/web/so-arelia-navigation-test/src/home.html","C:/web/so-arelia-navigation-test/src/case-management/case-list.html"],"names":[],"mappings":"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","file":"app-bundle.js","sourcesContent":["export class App {\n  router: any;\n\n  configureRouter(config, router) {\n    this.router = router;\n\n    config.title = 'Aurelia';\n\n    // parameterized route added by map\n    config.map([\n      {\n        route: ['', 'home'], name: 'home',\n        moduleId: './home', nav: true, title: 'Home'\n      },\n      {\n        route: \"/AppCaseMgmt/CaseList/Map/:RefNo\", name: \"CaseListMap\", moduleId: \"case-management/case-list\",\n        title: \"Test\"\n      }\n    ]);\n\n    // parameterized route added by addRoute\n    this.router.addRoute({\n      route: \"/AppCaseMgmt/CaseList/AddRoute/:RefNo\", name: \"CaseListAddRoute\", moduleId: \"case-management/case-list\",\n      title: \"Test\"\n    });\n\n    console.log(\"router configured\");\n  }\n\n  // open in new window\n  click(routeName) {\n    window.open(this.router.generate(routeName, { RefNo: this.getRefNo() }), '_blank');\n  }\n\n  // navigate locally\n  local() {\n\n    this.router.navigateToRoute('CaseListMap', { RefNo: this.getRefNo() }, { replace: true });\n  }\n\n  // get a random number\n  getRefNo() {\n    return Math.floor((Math.random() * 100) + 1);\n  }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","export class Home {\n  message = 'Homepage';\n}\n","import {Aurelia} from 'aurelia-framework'\nimport environment from './environment';\n\n//Configure Bluebird Promises.\n//Note: You may want to use environment-specific configuration.\n(<any>Promise).config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export class CaseList {\n  message = 'CaseList with parameter';\n  refNo = 'empty';\n\n  // set parameters\n  activate(params) {\n    this.refNo = params.RefNo || 'empty';\n    console.log(\"activated: case-list\");\n  }\n}\n","import {FrameworkConfiguration} from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n  //config.globalResources([]);\n}\n",null,null,null],"sourceRoot":"..\\src"}